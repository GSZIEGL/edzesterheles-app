
# ‚öΩ V09 ‚Äì Teljes edz√©sterhel√©s dashboard
import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Edz√©sterhel√©s V09", layout="wide")
st.title("‚öΩ Edz√©sterhel√©s Dashboard ‚Äì V09 (v√©gleges minta)")

uploaded_files = st.file_uploader("üì• Excel(ek) felt√∂lt√©se", type="xlsx", accept_multiple_files=True)
if uploaded_files:
    dfs = []
    for file in uploaded_files:
        xls = pd.ExcelFile(file)
        for sheet in xls.sheet_names:
            df = pd.read_excel(xls, sheet_name=sheet)
            df["H√©t"] = sheet
            df["T√≠pus"] = "Meccs" if "meccs" in sheet.lower() else "Edz√©s"
            dfs.append(df)
    data = pd.concat(dfs, ignore_index=True)

    players = data["J√°t√©kos neve"].dropna().unique().tolist()
    weeks = data["H√©t"].unique().tolist()
    metrics = [c for c in data.select_dtypes(include="number").columns if c not in ["Kor", "√âvfolyam"]]

    st.sidebar.header("üéõÔ∏è Sz≈±r≈ëk")
    selected_players = st.sidebar.multiselect("J√°t√©kos(ok)", players, default=players[:1])
    selected_weeks = st.sidebar.multiselect("H√©t(ek)", weeks, default=weeks)
    tipus = st.sidebar.radio("T√≠pus", ["Mindkett≈ë", "Edz√©s", "Meccs"])

    if tipus == "Mindkett≈ë":
        df_filtered = data[data["H√©t"].isin(selected_weeks)]
    else:
        df_filtered = data[(data["T√≠pus"] == tipus) & (data["H√©t"].isin(selected_weeks))]

    selected_metrics = st.sidebar.multiselect("Mutat√≥k", metrics)

    if not df_filtered.empty and selected_metrics:
        st.subheader("üìä Csapat ‚Äì Normaliz√°lt √ñsszehasonl√≠t√°s")
        csapat_df = df_filtered.copy()
        for m in selected_metrics:
            max_val = df_filtered[m].max()
            csapat_df[m] = df_filtered[m] / max_val * 100 if max_val else 0
        fig = px.bar(csapat_df, x="J√°t√©kos neve", y=selected_metrics, barmode="group")
        st.plotly_chart(fig, use_container_width=True)

        st.subheader("üìà Egy√©ni ‚Äì Trenddiagram")
        for m in selected_metrics:
            pivot = df_filtered.pivot_table(index="H√©t", columns="J√°t√©kos neve", values=m, aggfunc="mean").reset_index()
            fig = px.line(pivot, x="H√©t", y=pivot.columns[1:], title=f"Trend ‚Äì {m}", markers=True)
            st.plotly_chart(fig, use_container_width=True)

        st.subheader("üçï Pizza ‚Äì J√°t√©kosok √∂sszehasonl√≠t√°sa (edz√©s)")
        pizza_df = df_filtered[df_filtered["T√≠pus"] == "Edz√©s"]
        for player in selected_players:
            avg = pizza_df[pizza_df["J√°t√©kos neve"] == player][selected_metrics].mean()
            chart = pd.DataFrame({"Mutat√≥": avg.index, "√ârt√©k": avg.values})
            fig = px.line_polar(chart, r="√ârt√©k", theta="Mutat√≥", line_close=True, title=f"{player} ‚Äì Edz√©s")
            st.plotly_chart(fig, use_container_width=True)

        st.subheader("üçï Pizza ‚Äì J√°t√©kosok √∂sszehasonl√≠t√°sa (meccs)")
        pizza_df = df_filtered[df_filtered["T√≠pus"] == "Meccs"]
        for player in selected_players:
            avg = pizza_df[pizza_df["J√°t√©kos neve"] == player][selected_metrics].mean()
            chart = pd.DataFrame({"Mutat√≥": avg.index, "√ârt√©k": avg.values})
            fig = px.line_polar(chart, r="√ârt√©k", theta="Mutat√≥", line_close=True, title=f"{player} ‚Äì Meccs")
            st.plotly_chart(fig, use_container_width=True)

else:
    st.info("üì• K√©rlek, t√∂lts fel legal√°bb egy heti Excel-f√°jlt.")
