
import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

st.set_page_config(page_title="Edz√©sterhel√©s Dashboard", layout="wide")
st.title("üìä Edz√©s- √©s Meccsterhel√©s Elemz≈ë Dashboard")

uploaded_file = st.file_uploader("üì§ T√∂lts fel egy Excel f√°jlt (6 sheet: 5 edz√©s + 1 meccs)", type="xlsx")

@st.cache_data
def load_data(file):
    xls = pd.ExcelFile(file)
    dfs = []
    for sheet in xls.sheet_names:
        df = pd.read_excel(xls, sheet_name=sheet)
        df["Forr√°s"] = sheet
        dfs.append(df)
    return pd.concat(dfs, ignore_index=True)

def normalize(val, ref):
    return val / ref * 100 if ref else 0

if uploaded_file:
    df = load_data(uploaded_file)
    df = df[df["J√°t√©kos neve"].notna()]
    st.sidebar.header("üéØ Sz≈±r√©s")
    player_names = df["J√°t√©kos neve"].unique().tolist()
    selected_player = st.sidebar.selectbox("J√°t√©kos kiv√°laszt√°sa", player_names)

    df_player = df[df["J√°t√©kos neve"] == selected_player]

    mutatok = [
        "Teljes t√°v [m]",
        "T√°v/perc [m/perc]",
        "Max sebess√©g [km/h]",
        "Sprintek sz√°ma",
        "Z√≥na 5 gyorsul√°s",
        "Z√≥na 5 lassul√°s",
        "Z√≥na 5-6 t√°v",
        "Izomterhel√©s",
        "HRV (RMSSD)",
        "√Åtlagos pulzus [bpm]"
    ]

    ref = {
        "Teljes t√°v [m]": 5500,
        "T√°v/perc [m/perc]": 100,
        "Max sebess√©g [km/h]": 30,
        "Sprintek sz√°ma": 25,
        "Z√≥na 5 gyorsul√°s": 10,
        "Z√≥na 5 lassul√°s": 10,
        "Z√≥na 5-6 t√°v": 500,
        "Izomterhel√©s": 65,
        "HRV (RMSSD)": 60,
        "√Åtlagos pulzus [bpm]": 160
    }

    available_mutatok = [m for m in mutatok if m in df_player.columns]
    if available_mutatok:
        st.subheader("üï∏Ô∏è P√≥kh√°l√≥ diagram ‚Äì J√°t√©kos vs Ipar√°gi √Åtlag")
        avg_stats = df_player[available_mutatok].mean()
        norm_vals = [normalize(avg_stats[col], ref[col]) for col in available_mutatok]
        radar = go.Figure()
        radar.add_trace(go.Scatterpolar(r=norm_vals, theta=available_mutatok, fill='toself', name=selected_player))
        radar.add_trace(go.Scatterpolar(r=[100]*len(norm_vals), theta=available_mutatok, fill='toself', name='Ipar√°gi √°tlag'))
        radar.update_layout(polar=dict(radialaxis=dict(visible=True, range=[0, max(120, max(norm_vals))])), showlegend=True)
        st.plotly_chart(radar, use_container_width=True)

    if "Kezd√©si id≈ë" in df_player.columns and "HRV (RMSSD)" in df_player.columns and "√Åtlagos pulzus [bpm]" in df_player.columns:
        st.subheader("üìà HRV √©s Pulzus trendje")
        df_player["Kezd√©si id≈ë"] = pd.to_datetime(df_player["Kezd√©si id≈ë"], errors="coerce")
        fig = px.line(df_player.sort_values("Kezd√©si id≈ë"), x="Kezd√©si id≈ë",
                      y=["HRV (RMSSD)", "√Åtlagos pulzus [bpm]"], markers=True)
        st.plotly_chart(fig, use_container_width=True)

    if "Sprintek sz√°ma" in df_player.columns and "Max sebess√©g [km/h]" in df_player.columns:
        st.subheader("üèÉ‚Äç‚ôÇÔ∏è Sprintek √©s Max Sebess√©g")
        fig2 = px.bar(df_player, x="Forr√°s", y="Sprintek sz√°ma", color="Max sebess√©g [km/h]",
                      labels={"Forr√°s": "Edz√©s/Meccs"})
        st.plotly_chart(fig2, use_container_width=True)

    zone_cols = [col for col in ["Z√≥na 5 gyorsul√°s", "Z√≥na 5 lassul√°s", "Z√≥na 5-6 t√°v", "Izomterhel√©s"] if col in df_player.columns]
    if zone_cols:
        st.subheader("üì¶ Z√≥na √©s Izomterhel√©s mutat√≥k")
        fig3 = px.bar(df_player, x="Forr√°s", y=zone_cols, barmode="group")
        st.plotly_chart(fig3, use_container_width=True)
else:
    st.info("T√∂lts fel egy megfelel≈ë Excel f√°jlt (5 edz√©s + 1 meccs sheettel).")
