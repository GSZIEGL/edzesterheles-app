
# Streamlit edz√©sterhel√©s dashboard ‚Äì v√©gleges, fejlesztett verzi√≥ pizzadiagramokkal √©s struktur√°lt sz≈±r≈ëpanellel

import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Edz√©sterhel√©s Dashboard", layout="wide")

st.title("‚öΩ Edz√©sterhel√©s ‚Äì Interakt√≠v Elemz≈ë Rendszer")

uploaded_file = st.file_uploader("üì§ T√∂lts fel egy Excel f√°jlt (hetek = munkalapok)", type="xlsx")

@st.cache_data
def load_data(file):
    xls = pd.ExcelFile(file)
    dfs = []
    for sheet in xls.sheet_names:
        df = pd.read_excel(xls, sheet_name=sheet)
        df["H√©t"] = sheet
        dfs.append(df)
    return pd.concat(dfs, ignore_index=True)

def normalize_series(s):
    return (s - s.min()) / (s.max() - s.min()) * 100 if s.max() != s.min() else s

def pizza_chart(df, mutatok, ref_dict, title):
    df = df[mutatok].mean().dropna()
    pizza_df = pd.DataFrame({
        "Mutat√≥": df.index,
        "√ârt√©k": df.values,
        "Benchmark": [ref_dict.get(m, None) for m in df.index]
    })
    fig = px.bar_polar(pizza_df, r="√ârt√©k", theta="Mutat√≥", color="Mutat√≥",
                       title=title, template="plotly_dark", range_r=[0, max(pizza_df["Benchmark"].max(), pizza_df["√ârt√©k"].max()) * 1.2])
    return fig

if uploaded_file:
    df = load_data(uploaded_file)
    df = df[df["J√°t√©kos neve"].notna()]

    st.sidebar.header("üéõ Sz≈±r√©si panel")

    with st.sidebar.expander("üßç‚Äç‚ôÇÔ∏è J√°t√©kos"):
        players = sorted(df["J√°t√©kos neve"].dropna().unique())
        player = st.selectbox("V√°lassz j√°t√©kost", players)

    with st.sidebar.expander("üè∑ T√≠pus √©s H√©t"):
        tipusok = df["T√≠pus"].dropna().unique().tolist()
        tipus = st.selectbox("T√≠pus", ["√ñsszes"] + tipusok)
        hetek = df["H√©t"].dropna().unique().tolist()
        selected_weeks = st.multiselect("Hetek", hetek, default=hetek)

    with st.sidebar.expander("üìä Mutat√≥k kiv√°laszt√°sa"):
        mutatok = [c for c in df.columns if df[c].dtype in ["int64", "float64"] and c not in ["Kor", "√âvfolyam"]]
        selected_metrics = st.multiselect("Mutat√≥k", mutatok, default=[])

    df_player = df[(df["J√°t√©kos neve"] == player) & (df["H√©t"].isin(selected_weeks))]
    if tipus != "√ñsszes":
        df_player = df_player[df_player["T√≠pus"] == tipus]

    df_team = df[df["H√©t"].isin(selected_weeks)]
    if tipus != "√ñsszes":
        df_team = df_team[df_team["T√≠pus"] == tipus]

    ref_values = {
        "Teljes t√°v [m]": 5500,
        "T√°v/perc [m/perc]": 100,
        "Max sebess√©g [km/h]": 30,
        "Sprintek sz√°ma": 25,
        "Izomterhel√©s": 65,
        "HRV (RMSSD)": 60,
        "√Åtlagos pulzus [bpm]": 160,
        "Z√≥na 5-6 t√°v": 500,
        "Z√≥na 5 gyorsul√°s": 10,
        "Z√≥na 5 lassul√°s": 10
    }

    st.subheader(f"üìå {player} teljes√≠tm√©nye vs csapat vs benchmark")
    if selected_metrics:
        avg_player = df_player[selected_metrics].mean()
        avg_team = df_team[selected_metrics].mean()
        comp_df = pd.DataFrame({
            "Mutat√≥": selected_metrics,
            "J√°t√©kos": [avg_player.get(m, None) for m in selected_metrics],
            "Csapat": [avg_team.get(m, None) for m in selected_metrics],
            "Benchmark": [ref_values.get(m, None) for m in selected_metrics]
        })
        fig_comp = px.bar(comp_df, x="Mutat√≥", y=["J√°t√©kos", "Csapat", "Benchmark"], barmode="group")
        st.plotly_chart(fig_comp, use_container_width=True)

        st.subheader("üçï Pizzadiagram ‚Äì √Åtlagos √©rt√©kek")
        fig_pizza = pizza_chart(df_player, selected_metrics, ref_values, "Pizza diagram ‚Äì J√°t√©kos vs Benchmark")
        st.plotly_chart(fig_pizza, use_container_width=True)

        st.subheader("üìà Normaliz√°lt trenddiagram")
        trend_df = df_player.groupby("H√©t")[selected_metrics].mean().reset_index()
        for col in selected_metrics:
            if col in trend_df.columns:
                trend_df[col] = normalize_series(trend_df[col])
        fig_trend = px.line(trend_df, x="H√©t", y=selected_metrics, markers=True)
        st.plotly_chart(fig_trend, use_container_width=True)

    st.subheader("üìã Adatt√°bla")
    st.dataframe(df_player[selected_metrics + ["H√©t", "T√≠pus"]] if selected_metrics else df_player)
else:
    st.info("T√∂lts fel egy Data.xlsx f√°jlt a kezd√©shez.")
