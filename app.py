
import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from io import BytesIO

st.set_page_config(page_title="Edz√©sterhel√©s Elemz√©s", layout="wide")
st.title("üèÜ Heti edz√©sterhel√©s elemz≈ë alkalmaz√°s")

# --- F√°jl bet√∂lt√©s ---
uploaded_file = st.file_uploader("T√∂lts fel egy Excel f√°jlt (5 edz√©s + 1 meccs munkalappal)", type="xlsx")

@st.cache_data
def load_excel(file):
    excel = pd.ExcelFile(file)
    dfs = []
    for sheet in excel.sheet_names:
        df = pd.read_excel(file, sheet_name=sheet)
        df["Forr√°s"] = sheet
        dfs.append(df)
    return pd.concat(dfs, ignore_index=True)

# --- Feldolgoz√°s ---
def preprocess(df):
    df = df.copy()
    df = df[df["J√°t√©kos neve"].notna()]
    df["Kezd√©si id≈ë"] = pd.to_datetime(df["Kezd√©si id≈ë"], errors="coerce")
    df["√Åtlagos pulzus [bpm]"] = pd.to_numeric(df["√Åtlagos pulzus [bpm]"], errors="coerce")
    df["Izomterhel√©s"] = pd.to_numeric(df["Izomterhel√©s"], errors="coerce")
    df["HRV (RMSSD)"] = pd.to_numeric(df["HRV (RMSSD)"], errors="coerce")
    df["Id≈ëtartam"] = pd.to_timedelta(df["Id≈ëtartam"], errors="coerce")
    df["Id≈ëtartam perc"] = df["Id≈ëtartam"].dt.total_seconds() / 60
    df["Edz√©s/meccs"] = df["Forr√°s"].apply(lambda x: "Meccs" if "meccs" in x.lower() else "Edz√©s")
    return df

def calculate_summary(df):
    return df.groupby("J√°t√©kos neve").agg({
        "√Åtlagos pulzus [bpm]": "mean",
        "Izomterhel√©s": "sum",
        "HRV (RMSSD)": "mean",
        "Id≈ëtartam perc": "sum"
    }).rename(columns={
        "√Åtlagos pulzus [bpm]": "√Åtlagos pulzus",
        "Izomterhel√©s": "√ñsszes izomterhel√©s",
        "HRV (RMSSD)": "√Åtlagos HRV",
        "Id≈ëtartam perc": "√ñssz id≈ë (perc)"
    }).reset_index()

def plot_radar(player_data, avg_data, labels):
    fig = go.Figure()
    fig.add_trace(go.Scatterpolar(
        r=player_data,
        theta=labels,
        fill='toself',
        name='J√°t√©kos'
    ))
    fig.add_trace(go.Scatterpolar(
        r=avg_data,
        theta=labels,
        fill='toself',
        name='Ipar√°gi √°tlag'
    ))
    fig.update_layout(polar=dict(radialaxis=dict(visible=True)), showlegend=True)
    return fig

# --- App logika ---
if uploaded_file:
    raw_df = load_excel(uploaded_file)
    df = preprocess(raw_df)

    st.sidebar.header("üéØ Sz≈±r√©s")
    players = df["J√°t√©kos neve"].dropna().unique().tolist()
    selected_player = st.sidebar.selectbox("V√°lassz j√°t√©kost", players)
    df_player = df[df["J√°t√©kos neve"] == selected_player]

    # √ñsszefoglal√≥
    st.subheader("üìä √ñsszes√≠tett mutat√≥k")
    summary_df = calculate_summary(df)
    st.dataframe(summary_df)

    # Izomterhel√©s top 10
    st.subheader("üî• Top 10 j√°t√©kos izomterhel√©s szerint")
    top_df = summary_df.sort_values("√ñsszes izomterhel√©s", ascending=False).head(10)
    fig_bar = px.bar(top_df, x="J√°t√©kos neve", y="√ñsszes izomterhel√©s", title="Top 10 izomterhel√©s")
    st.plotly_chart(fig_bar, use_container_width=True)

    # HRV trend
    st.subheader("üìà HRV trend id≈ëben")
    fig_line = px.line(df_player, x="Kezd√©si id≈ë", y="HRV (RMSSD)", markers=True, title=f"{selected_player} HRV trend")
    st.plotly_chart(fig_line, use_container_width=True)

    # P√≥kh√°l√≥ ‚Äì egyszer≈±s√≠tett p√©lda 5 mutat√≥val
    st.subheader("üï∏Ô∏è P√≥kh√°l√≥ diagram ‚Äì j√°t√©kos vs ipar√°gi √°tlag")
    radar_labels = ["Pulzus", "Izomterhel√©s", "HRV", "Id≈ëtartam", "T√°v/perc"]
    player_vals = [
        df_player["√Åtlagos pulzus [bpm]"].mean(),
        df_player["Izomterhel√©s"].sum(),
        df_player["HRV (RMSSD)"].mean(),
        df_player["Id≈ëtartam perc"].sum(),
        df_player["Id≈ëtartam perc"].sum() / len(df_player) if len(df_player) > 0 else 0
    ]
    industry_vals = [160, 70, 60, 80, 120]  # p√©ldak√©nt ipar√°gi √°tlag
    fig_radar = plot_radar(player_vals, industry_vals, radar_labels)
    st.plotly_chart(fig_radar, use_container_width=True)

else:
    st.info("T√∂lts fel egy Excel f√°jlt az elemz√©shez.")
